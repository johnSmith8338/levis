/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
@import url("https://fonts.googleapis.com/css?family=Open+Sans:300,400,400i,600,700,800&subset=cyrillic,cyrillic-ext");
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* Slider */
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0; }
  .slick-list:focus {
    outline: none; }
  .slick-list.dragging {
    cursor: pointer;
    cursor: hand; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
  margin-left: auto;
  margin-right: auto; }
  .slick-track:before, .slick-track:after {
    content: "";
    display: table; }
  .slick-track:after {
    clear: both; }
  .slick-loading .slick-track {
    visibility: hidden; }

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none; }
  [dir="rtl"] .slick-slide {
    float: right; }
  .slick-slide img {
    display: block; }
  .slick-slide.slick-loading img {
    display: none; }
  .slick-slide.dragging img {
    pointer-events: none; }
  .slick-initialized .slick-slide {
    display: block; }
  .slick-loading .slick-slide {
    visibility: hidden; }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent; }

.slick-arrow.slick-hidden {
  display: none; }

*,
*:before,
*:after {
  box-sizing: border-box; }

img {
  width: 100%;
  height: auto; }

#page {
  overflow: hidden; }

body {
  margin: 0;
  padding: 0;
  font: 16px/24px "Open Sans", Arial, Helvetica, sans-serif;
  color: #333; }

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 15px; }

h1,
h2,
h3,
p {
  margin: 0 0 10px; }

.underline {
  width: 150px;
  height: 2px;
  background-color: rgba(0, 0, 0, 0.3);
  margin: 0 0 10px; }

.section-title-block {
  text-transform: uppercase;
  color: #c41230;
  margin: 0 0 44px; }
  @media (max-width: 768px) {
    .section-title-block {
      margin: 0 0 20px; } }
  .section-title-block .section-title-txt {
    font-size: 16px;
    margin: 0 0 10px; }
    @media (max-width: 768px) {
      .section-title-block .section-title-txt {
        margin: 0 0 5px; } }
  .section-title-block .section-title {
    font-size: 48px;
    line-height: 52px;
    font-weight: 900;
    margin: 0 0 58px; }
    @media (max-width: 768px) {
      .section-title-block .section-title {
        font-size: 30px;
        line-height: 34px;
        margin: 0 0 10px; } }

@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon.eot?ll5cty");
  src: url("../fonts/icomoon.eot?ll5cty#iefix") format("embedded-opentype"), url("../fonts/icomoon.ttf?ll5cty") format("truetype"), url("../fonts/icomoon.woff?ll5cty") format("woff"), url("../fonts/icomoon.svg?ll5cty#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-dot:before {
  content: "\e906"; }

.icon-add:before {
  content: "\e900"; }

.icon-menu:before {
  content: "\e905"; }

.icon-close-cross:before {
  content: "\e901"; }

.icon-left-arrow:before {
  content: "\e902"; }

.icon-magnifying-glass:before {
  content: "\e903"; }

.icon-right-arrow:before {
  content: "\e904"; }

.nav-wrapper {
  display: flex;
  align-items: center; }

#nav {
  list-style: none;
  margin: 0;
  padding: 0;
  font-family: "Open Sans", Arial, Helvetica, sans-serif;
  color: #333;
  font-size: 17px; }
  #nav .current {
    color: #c41230; }
  #nav li {
    display: inline-block;
    margin: 0 0 0 34px; }
    #nav li a {
      text-decoration: none;
      color: inherit; }
      #nav li a:hover {
        color: #c41230; }

.burger-menu {
  display: none; }

.burger-menu [class^="icon-"] {
  font-size: 30px;
  color: #333; }

.logo {
  width: 100px; }

.logo-img-holder {
  display: block; }

.button a {
  display: inline-block;
  text-decoration: none;
  color: #fff;
  background-color: #c41230;
  padding: 6px 18px;
  border-radius: 22px;
  font-weight: 600;
  font-size: 14px;
  text-transform: uppercase; }
  .button a:hover {
    background-color: #a70f29; }

.button-wrapper {
  margin: 0 0 0 34px; }

.advantages-pic [class^="icon-"] {
  font-size: 12px;
  color: #fff;
  background-color: #000;
  border-radius: 50%;
  padding: 7px;
  width: 30px;
  height: 30px;
  line-height: 28px;
  text-align: center; }

.top-back-wrapper {
  cursor: pointer;
  position: absolute;
  top: 15%;
  left: 8%; }
  .top-back-wrapper:hover .top-back-hover {
    display: block; }

.top-back {
  padding: 5px;
  border-radius: 50%; }
  .top-back:hover {
    border: 1px solid #fff; }
    .top-back:hover [class^='icon-'] {
      background-color: #fff;
      color: #000; }

.top-back-hover {
  display: none;
  position: absolute;
  top: 100%;
  right: 68%; }
  .top-back-hover:after {
    content: '';
    border-bottom: 1px solid #000;
    border-right: 1px solid #000;
    height: 13%;
    width: 41%;
    position: absolute;
    top: 0%;
    right: -3%; }

.top-front-wrapper {
  cursor: pointer;
  position: absolute;
  top: 20%;
  right: 50%; }
  .top-front-wrapper:hover .top-front-hover {
    display: block; }

.top-front {
  padding: 5px;
  border-radius: 50%; }
  .top-front:hover {
    border: 1px solid #fff; }
    .top-front:hover [class^='icon-'] {
      background-color: #fff;
      color: #000; }

.top-front-hover {
  display: none;
  position: absolute;
  top: 8%;
  left: 300%; }
  .top-front-hover:after {
    content: '';
    border-top: 1px solid #000;
    border-left: 1px solid #000;
    height: 0;
    width: 31%;
    position: absolute;
    top: 12%;
    left: -31%; }

.back-wrapper {
  cursor: pointer;
  position: absolute;
  top: 60%;
  left: 6%; }
  .back-wrapper:hover .back-hover {
    display: block; }

.back {
  padding: 5px;
  border-radius: 50%; }
  .back:hover {
    border: 1px solid #fff; }
    .back:hover [class^='icon-'] {
      background-color: #fff;
      color: #000; }

.back-hover {
  display: none;
  position: absolute;
  bottom: 50%;
  right: 40%; }
  .back-hover:after {
    content: '';
    border-top: 1px solid #000;
    border-right: 1px solid #000;
    height: 72%;
    width: 37%;
    position: absolute;
    top: 12%;
    right: 1%; }

.front-wrapper {
  cursor: pointer;
  position: absolute;
  bottom: 35%;
  right: 7%; }
  .front-wrapper:hover .front-hover {
    display: block; }

.front {
  padding: 5px;
  border-radius: 50%; }
  .front:hover {
    border: 1px solid #fff; }
    .front:hover [class^='icon-'] {
      background-color: #fff;
      color: #000; }

.front-hover {
  display: none;
  position: absolute;
  top: 400%;
  right: -300%; }
  .front-hover:after {
    content: '';
    border-right: 1px solid #000;
    height: 95%;
    width: 0;
    position: absolute;
    bottom: 100%;
    left: 44%; }

.bottom-wrapper {
  cursor: pointer;
  position: absolute;
  bottom: 12%;
  left: 15%; }
  .bottom-wrapper:hover .bottom-hover {
    display: block; }

.bottom {
  padding: 5px;
  border-radius: 50%; }
  .bottom:hover {
    border: 1px solid #fff; }
    .bottom:hover [class^='icon-'] {
      background-color: #fff;
      color: #000; }

.bottom-hover {
  display: none;
  position: absolute;
  top: 100%;
  right: 20%; }
  .bottom-hover:after {
    content: '';
    border-bottom: 1px solid #000;
    border-right: 1px solid #000;
    height: 12%;
    width: 33%;
    position: absolute;
    bottom: 88%;
    right: 5%; }

.hover-block {
  width: 240px; }

.hover-title {
  font-weight: 700;
  font-size: 14px;
  line-height: 18px;
  text-transform: uppercase;
  padding: 5px 35px;
  display: inline-block;
  border: 1px solid;
  margin: 0 0 14px; }

.header {
  min-height: 84px;
  width: 100%;
  padding: 18px 0;
  position: fixed;
  top: 0;
  z-index: 10; }

.header-wrapper {
  display: flex;
  justify-content: space-between; }

.banner {
  height: 100vh;
  background-image: url(../images/banner-img.jpg);
  display: flex;
  align-items: center; }

.banner-wrapper {
  display: flex;
  justify-content: space-around;
  align-items: center; }

.banner-picture {
  width: 40%; }

.banner-description {
  width: 40%;
  background-color: #fff;
  padding: 72px 42px 50px;
  box-shadow: 0px 0px 9px rgba(0, 0, 0, 0.3); }

.description-title-block {
  margin: 0 0 34px; }

.description-title {
  font-size: 36px;
  line-height: 40px;
  font-weight: 900;
  color: #c41230;
  margin: 0 0 32px; }

.description-title-sign {
  font-size: 14px;
  margin: 0 0 30px; }

.description-txt {
  margin: 0 0 40px; }

.description-button {
  text-align: center; }
  .description-button a {
    font-size: 16px;
    padding: 11px 23px; }

#history {
  padding: 8% 0; }

.history-wrapper {
  display: flex;
  align-items: flex-start;
  justify-content: space-between; }
  @media (max-width: 1023px) {
    .history-wrapper {
      flex-direction: column; } }

.main-history-txt {
  width: 40%; }
  @media (max-width: 1023px) {
    .main-history-txt {
      width: 100%; } }

.history-pic {
  width: 50%; }
  @media (max-width: 1023px) {
    .history-pic {
      width: 100%; } }

.history-txt {
  margin: 0 0 46px; }
  @media (max-width: 768px) {
    .history-txt {
      margin: 0 0 10px; } }

.history-txt-title {
  font-weight: 700;
  display: block; }

#advantages {
  background-color: #f5f5f5;
  padding: 10% 0 6%; }

.advantages-wrapper {
  display: flex;
  position: relative; }

.advantages-desc {
  width: 45%; }

.advantages-list-holder {
  font-size: 14px; }

.advantages-list {
  padding: 0;
  margin: 0;
  list-style: none; }
  .advantages-list [class^='icon-'] {
    font-size: 4px;
    margin: 0 5px 0 0; }

.advantages-item {
  margin: 0 0 5px;
  display: flex;
  align-items: center; }

.advantages-pic {
  position: relative;
  width: 55%; }

#catalog {
  padding: 8% 0; }
  #catalog .section-title-block {
    text-align: center;
    margin: 0 0 12%; }
  #catalog .underline-center {
    margin: 0 auto 36px; }
  #catalog .section-title {
    margin: 0 0 32px; }
  #catalog .section-title-txt {
    font-size: 16px;
    color: #8e8e8e; }

.all-models-list {
  display: flex;
  flex-flow: row wrap;
  align-items: stretch;
  margin: 0 -30px; }

.all-models-item {
  width: 25%;
  text-align: center;
  text-transform: uppercase;
  padding: 0 30px;
  position: relative; }
  .all-models-item a {
    text-decoration: none;
    color: #333;
    display: block;
    padding: 40px 0 0;
    border: 1px solid transparent; }
    .all-models-item a:hover {
      border: 1px solid #c41230; }
      .all-models-item a:hover .all-models-img-hover {
        display: block; }
      .all-models-item a:hover .all-models-img {
        display: none; }
  .all-models-item .all-models-price {
    color: #c41230;
    font-weight: 700;
    margin: 0 0 20px; }

.all-models-img-holder {
  margin: 0 auto 35px;
  width: 236px;
  height: 169px; }

.all-models-img-hover {
  display: none; }

.all-models-sale-holder {
  position: absolute;
  left: 15%;
  bottom: 40%;
  padding: 1px;
  border: 2px solid #fff;
  border-radius: 50%; }

.all-models-sale {
  height: 57px;
  width: 57px;
  border-radius: 50%;
  background-color: #fff;
  flex-flow: row nowrap;
  display: flex;
  align-items: center;
  justify-content: space-around;
  box-shadow: 0 1px 5px #7f7f7f; }

.sale-value-before {
  font-size: 7px;
  margin: 0 0px 0 5px;
  text-decoration: underline; }

.sale-value {
  margin: 0 5px 0 0px; }

.slick-slider {
  margin-bottom: 0;
  position: relative; }

ul.slickslide {
  padding-left: 0;
  max-width: 100%; }

.slick-slider .slick-track {
  min-width: 100%; }

ul.slickslide li img,
.slick-dots button img {
  width: 100%;
  height: auto; }

.slick-dots {
  bottom: -30%;
  top: auto;
  left: 18%;
  right: auto;
  position: absolute;
  line-height: 0; }

.slick-dots li,
.slick-dots li button:before {
  /* width: 100px;
    height:100px; */
  margin: 0;
  padding: 0; }

.slick-dots li {
  margin: 5px;
  border: 1px solid #c4c4c4;
  display: inline-block;
  width: auto;
  height: auto; }
  .slick-dots li:hover {
    border: 1px solid #c41230; }

.slick-slider .slick-track {
  min-width: 100%; }

.slick-dots li button {
  margin: 0;
  height: auto;
  width: 100%;
  padding: 0;
  border: none;
  outline: none; }

.slick-dots li button.tab {
  clear: both;
  display: block; }

.slick-dots li button img {
  width: 100%;
  max-width: 80px;
  max-height: 80px;
  padding: 15px 0;
  background: #fff; }

.slick-dots li button:before {
  content: '';
  display: block;
  width: 100%;
  max-width: 150px;
  overflow: hidden;
  float: none;
  position: absolute;
  width: 100%;
  height: 100%; }

.slick-thumbs {
  position: absolute;
  left: -9999px; }

.one-model-preview-wrapper {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  padding: 15% 0; }

.slickslide {
  width: 45%; }

.one-model-desc {
  width: 45%; }

.one-model-desc .desc-title-block {
  font-size: 36px;
  text-transform: uppercase; }

.one-model-desc .desc-title-txt {
  margin: 0 0 20px; }

.one-model-desc .desc-title {
  color: #c41230;
  font-weight: bolder;
  font-size: 36px;
  margin: 0 0 38px; }

.one-model-desc .underline {
  text-align: left;
  margin: 0 0 38px; }

.one-model-price {
  font-size: 48px;
  color: #c41230;
  display: flex;
  align-items: center;
  margin: 0 0 47px; }

.one-model-price-name {
  font-size: 16px;
  margin: 0 0 0 10px; }

.one-model-price-sale {
  font-size: 16px;
  color: #c4c4c4;
  text-decoration: line-through;
  margin: 0 0 0 24px; }

.model-desc-list {
  margin: 0 0 66px;
  padding: 0 0 24px;
  list-style: none;
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  width: 95%; }

.model-desc-item {
  margin: 0 0 10px; }

.model-desc-item-sign {
  color: rgba(0, 0, 0, 0.6); }

.model-desc-order {
  display: flex;
  justify-content: space-between;
  align-items: center; }
  .model-desc-order .button {
    margin: 0 18% 0px 0px; }
    .model-desc-order .button a {
      font-size: 16px;
      padding: 12px 36px; }

.model-desc-order-size {
  font-size: 14px;
  color: #333;
  text-decoration: none; }
  .model-desc-order-size:hover {
    border-bottom: 1px solid #c41230; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
